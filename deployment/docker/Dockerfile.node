FROM rust:1.76-slim-bullseye as builder

WORKDIR /app

# Install dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    pkg-config \
    libssl-dev \
    build-essential \
    git \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy manifests and build dependencies first (for better caching)
COPY Cargo.toml Cargo.lock ./
COPY crates/windexer-api/Cargo.toml ./crates/windexer-api/
COPY crates/windexer-common/Cargo.toml ./crates/windexer-common/
COPY crates/windexer-geyser/Cargo.toml ./crates/windexer-geyser/
COPY crates/windexer-jito-staking/Cargo.toml ./crates/windexer-jito-staking/
COPY crates/windexer-network/Cargo.toml ./crates/windexer-network/
COPY crates/windexer-store/Cargo.toml ./crates/windexer-store/
COPY crates/windexer-examples/Cargo.toml ./crates/windexer-examples/

# Create dummy source files for workspace members
RUN mkdir -p crates/windexer-api/src \
    && mkdir -p crates/windexer-common/src \
    && mkdir -p crates/windexer-geyser/src \
    && mkdir -p crates/windexer-jito-staking/src \
    && mkdir -p crates/windexer-network/src \
    && mkdir -p crates/windexer-store/src \
    && mkdir -p crates/windexer-examples/src \
    && touch crates/windexer-api/src/lib.rs \
    && touch crates/windexer-common/src/lib.rs \
    && touch crates/windexer-geyser/src/lib.rs \
    && touch crates/windexer-jito-staking/src/lib.rs \
    && touch crates/windexer-network/src/lib.rs \
    && touch crates/windexer-store/src/lib.rs \
    && touch crates/windexer-examples/src/lib.rs \
    && echo 'fn main() {}' > crates/windexer-examples/src/node.rs \
    && echo 'fn main() {}' > crates/windexer-examples/src/indexer.rs

# Build dependencies only
RUN cargo build --bin node --bin indexer

# Copy the actual source code
COPY crates ./crates
COPY scripts ./scripts

# Build the node and indexer binaries
RUN cargo build --release --bin node --bin indexer

# Runtime stage
FROM debian:bullseye-slim

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    ca-certificates \
    libssl1.1 \
    curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the build artifacts from the builder stage
COPY --from=builder /app/target/release/node /app/
COPY --from=builder /app/target/release/indexer /app/
COPY --from=builder /app/scripts/test-scripts /app/scripts/

# Create data directory
RUN mkdir -p /app/data/node_1 /app/data/indexer_1

# Set environment variables
ENV RUST_LOG=info

# Expose necessary ports (P2P, API)
EXPOSE 9000-9002 10001-10002

# Create an entrypoint script
RUN echo '#!/bin/bash\n\
if [ "$1" = "node" ]; then\n\
  shift\n\
  /app/node "$@"\n\
elif [ "$1" = "indexer" ]; then\n\
  shift\n\
  /app/indexer "$@"\n\
else\n\
  exec "$@"\n\
fi' > /app/entrypoint.sh && chmod +x /app/entrypoint.sh

ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["node", "--index", "1", "--base-port", "9000", "--enable-tip-route"]
